{"ts":1356881364859,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1356881419184,"patch":[[{"diffs":[[1,"define(\r\n['cosmic/collisions', 'cosmic/Matter'],\r\nfunction (collisions, Matter) {\r\n    var _spec = this\r\n        \r\n    describe('Collisions', function () {\r\n        beforeEach(function () {\r\n            _spec.matter = new Matter();\r\n        });\r\n        \r\n        it('should have collision and collide function', function () {\r\n            expect(typeof _spec.matter.collision).toEqual('function');\r\n            expect(typeof _spec.matter.collide).toEqual('function');\r\n        });\r\n        \r\n        it('should call collide on both objects on collision', function () {\r\n            var matter = new Matter(),\r\n                obj = new Matter(),\r\n                spyMatter = sinon.spy(),\r\n                spyObj = sinon.spy();\r\n                \r\n            matter.x = 0;\r\n            matter.y = 0;\r\n            matter.boundingBox(10, 10, 5, 0);\r\n            matter.collide = spyMatter;\r\n            \r\n            obj.x = 0;\r\n            obj.y = 0;\r\n            obj.boundingBox(5, 5, 2.5, 0);\r\n            obj.collide = spyObj;\r\n        \r\n            expect(matter.collision(obj)).toEqual(true);\r\n            expect(spyMatter).toHaveBeenCalled();\r\n            expect(spyObj).toHaveBeenCalled();\r\n        })\r\n        \r\n        describe('Center distance collision', function () {\r\n            it('should be true when distance is within radii', function () {\r\n                var matter = _spec.matter,\r\n                    obj = new Matter();\r\n                \r\n                matter.x = 0;\r\n                matter.y = 0;\r\n                matter._bounding.radius = 100;\r\n                \r\n                obj.x = 100;\r\n                obj.y = 0;\r\n                obj._bounding.radius = 100;\r\n            \r\n                expect(_spec.matter._centerDistanceCollision(obj)).toEqual(true)\r\n            });\r\n            \r\n            it('should be false when distance is outside radii', function () {\r\n                var matter = _spec.matter,\r\n                    obj = new Matter();\r\n                \r\n                matter.x = 0;\r\n                matter.y = 0;\r\n                matter._bounding.radius = 10;\r\n                \r\n                obj.x = 100;\r\n                obj.y = 0;\r\n                obj._bounding.radius = 10;\r\n            \r\n                expect(_spec.matter._centerDistanceCollision(obj)).toEqual(false);\r\n            });\r\n            \r\n            it('should be true when distance is equal to radii', function () {\r\n                var matter = _spec.matter,\r\n                    obj = new Matter();\r\n                \r\n                matter.x = 0;\r\n                matter.y = 0;\r\n                matter._bounding.radius = 50;\r\n                \r\n                obj.x = 100;\r\n                obj.y = 0;\r\n                obj._bounding.radius = 50;\r\n            \r\n                expect(_spec.matter._centerDistanceCollision(obj)).toEqual(true);\r\n            });\r\n        });\r\n        \r\n        describe('Bounding box collision', function () {\r\n            it('should create bounding box from given parameters', function () {\r\n                var matter = _spec.matter;\r\n                \r\n                // Set bounding box\r\n                matter.boundingBox(10, 10, 5, 0);\r\n                \r\n                // Get bounding box\r\n                var box = matter.boundingBox();\r\n                \r\n                expect(box.length).toEqual(4);\r\n                expect(box[0].x).toBeCloseTo(5);\r\n                expect(box[0].y).toBeCloseTo(-5);\r\n                \r\n                expect(box[1].x).toBeCloseTo(-5);\r\n                expect(box[1].y).toBeCloseTo(-5);\r\n                \r\n                expect(box[2].x).toBeCloseTo(-5);\r\n                expect(box[2].y).toBeCloseTo(5);\r\n                \r\n                expect(box[3].x).toBeCloseTo(5);\r\n                expect(box[3].y).toBeCloseTo(5);\r\n            });\r\n            \r\n            it('should set radius when bounding box is set', function () {\r\n                var matter = _spec.matter;\r\n                \r\n                // Set bounding box\r\n                matter.boundingBox(5, 20, 5, 0);\r\n                \r\n                expect(matter._bounding.radius).toBeCloseTo(Math.sqrt(15*15 + 2.5*2.5),2);\r\n            })\r\n            \r\n            it('should be true when point is inside box', function () {\r\n                var matter = _spec.matter,\r\n                    obj = new Matter();\r\n                \r\n                matter.x = 0;\r\n                matter.y = 0;\r\n                matter.boundingBox(10, 10, 5, 0);\r\n                \r\n                obj.x = 0;\r\n                obj.y = 0;\r\n                obj.boundingBox(5, 5, 2.5, 0);\r\n            \r\n                expect(_spec.matter._boundingBoxCollision(obj)).toEqual(true);\r\n            })\r\n            \r\n            it('should be false when point is outside box', function () {\r\n                var matter = _spec.matter,\r\n                    obj = new Matter();\r\n                \r\n                matter.x = 100;\r\n                matter.y = 0;\r\n                matter.boundingBox(10, 10, 5, 0);\r\n                \r\n                obj.x = 0;\r\n                obj.y = 0;\r\n                obj.boundingBox(5, 5, 2.5, 0);\r\n            \r\n                expect(_spec.matter._boundingBoxCollision(obj)).toEqual(false);\r\n            })\r\n            \r\n            it('should be true when point is touching box', function () {\r\n                var matter = _spec.matter,\r\n                    obj = new Matter();\r\n                \r\n                matter.x = 0;\r\n                matter.y = 0;\r\n                matter.boundingBox(10, 10, 5, 0);\r\n                \r\n                obj.x = 0;\r\n                obj.y = 0;\r\n                obj.boundingBox(10, 10, 5, 0);\r\n            \r\n                expect(_spec.matter._boundingBoxCollision(obj)).toEqual(true);\r\n            })\r\n        })\r\n    });\r\n})"]],"start1":0,"start2":0,"length1":0,"length2":5844}]],"length":5844,"saved":false}
{"ts":1356881535656,"patch":[[{"diffs":[[0,"/Matter'"],[1,", 'underscore'"],[0,"],\r\nfunc"]],"start1":38,"start2":38,"length1":16,"length2":30},{"diffs":[[0,", Matter"],[1,", _"],[0,") {\r\n   "]],"start1":84,"start2":84,"length1":16,"length2":19},{"diffs":[[0,"c = this"],[1,",\r\n        TestObject = function () {\r\n            Matter.call(this);\r\n            return this;\r\n        };"],[0,"\r\n      "]],"start1":112,"start2":112,"length1":16,"length2":123}]],"length":5968,"saved":false}
{"ts":1356881690585,"patch":[[{"diffs":[[0,"    "],[-1,"_spec.matter = new Matter();"],[0,"\r\n  "]],"start1":323,"start2":323,"length1":36,"length2":8},{"diffs":[[0,"ion "],[-1,"and collide function', function () {\r\n            expect(typeof _spec.matter.collision).toEqual('function');\r\n            expect(typeof _spec.matter.collide).toEqual('function'"],[1,"call in Matter that uses checkCollision', function () {\r\n            var spy = sinon.spy();\r\n            \r\n            TestObject.prototype.checkCollision = spy;\r\n            \r\n            var test = new TestObject();\r\n            test.collision();\r\n            expect(spy).toHaveBeenCalled("],[0,");\r\n"]],"start1":382,"start2":382,"length1":184,"length2":299}]],"length":6055,"saved":false}
{"ts":1356881730903,"patch":[[{"diffs":[[0,"= spy;\r\n"],[-1,"            \r\n"],[0,"        "]],"start1":541,"start2":541,"length1":30,"length2":16},{"diffs":[[0,"tObject();\r\n"],[1,"            \r\n            expect(typeof test.collision).toEqual('function');\r\n"],[0,"            "]],"start1":579,"start2":579,"length1":24,"length2":102}]],"length":6119,"saved":false}
{"ts":1356881857890,"patch":[[{"diffs":[[0,"var "],[-1,"matter = new Matter(),\r\n                obj = new Matter(),\r\n                "],[0,"spyM"]],"start1":858,"start2":858,"length1":85,"length2":8},{"diffs":[[0,");\r\n            "],[-1,"    "],[0,"\r\n            ma"]],"start1":923,"start2":923,"length1":36,"length2":32},{"diffs":[[0,"    "],[-1,"matter.x = 0;\r\n            matter.y = 0;\r\n            matter.boundingBox(10, 10, 5, 0);"],[1,"TestObject.prototype.checkCollision = function () { return true; };\r\n            "],[0,"\r\n  "]],"start1":949,"start2":949,"length1":95,"length2":89},{"diffs":[[0,"    "],[1,"var "],[0,"matter"],[-1,".collide = spyMatter;"],[1," = new TestObject(),"],[0,"\r\n  "]],"start1":1044,"start2":1044,"length1":35,"length2":38},{"diffs":[[0,"    "],[-1,"\r\n        "],[0,"    obj"],[-1,".x"],[0," = "],[-1,"0;\r\n            obj.y = 0;\r\n            obj.boundingBox(5, 5, 2.5, 0);\r\n            obj.collide = spyObj;\r\n"],[1,"new TestObject();\r\n    "],[0,"    "]],"start1":1088,"start2":1088,"length1":137,"length2":41}]],"length":5939,"saved":false}
{"ts":1356881897520,"patch":[[{"diffs":[[0,");\r\n"],[-1,"            return this;\r\n"],[0,"    "]],"start1":187,"start2":187,"length1":34,"length2":8}]],"length":5913,"saved":false}
{"ts":1356881914080,"patch":[[{"diffs":[[0," {\r\n"],[-1,"        beforeEach(function () {\r\n            \r\n        });\r\n        \r\n"],[0,"    "]],"start1":251,"start2":251,"length1":79,"length2":8}]],"length":5842,"saved":false}
{"ts":1356882045447,"patch":[[{"diffs":[[0," function () {\r\n"],[1,"            beforeEach(function () {\r\n                var CenterObject = function (radius) {\r\n                    Matter.call(this);\r\n                    this.setBounding(radius);\r\n                }\r\n                _.extend(CenterObject.prototype, collisions.centerDistance)\r\n            })\r\n            \r\n"],[0,"            it('"]],"start1":1262,"start2":1262,"length1":32,"length2":339}]],"length":6149,"saved":false}
{"ts":1356882253951,"patch":[[{"diffs":[[0," {\r\n"],[-1,"            beforeEach(function () {\r\n                var CenterObject = function (radius) {\r\n                    Matter.call(this);\r\n                    this.setBounding(radius);\r\n                }\r\n                _.extend(CenterObject.prototype, collisions.centerDistance)\r\n            })\r\n            \r\n"],[0,"    "]],"start1":1274,"start2":1274,"length1":315,"length2":8},{"diffs":[[0,"ar matter = "],[-1,"_spec.m"],[1,"new M"],[0,"atter"],[1,"()"],[0,",\r\n         "]],"start1":1373,"start2":1373,"length1":36,"length2":36},{"diffs":[[0,"    "],[-1,"matter._bounding."],[1,"collisions.bounding(matter, { "],[0,"radius"],[-1," ="],[1,":"],[0," 100"],[1," })"],[0,";\r\n "]],"start1":1533,"start2":1533,"length1":37,"length2":52},{"diffs":[[0,"    "],[-1,"obj._bounding."],[1,"collisions.bounding(obj, { "],[0,"radius"],[-1," ="],[1,":"],[0," 100"],[1," })"],[0,";\r\n "]],"start1":1672,"start2":1672,"length1":34,"length2":49},{"diffs":[[0,"ect("],[-1,"_spec.matter._centerDistanceCollision("],[1,"collisions.centerDistance.call(matter, "],[0,"obj)"]],"start1":1753,"start2":1753,"length1":46,"length2":47},{"diffs":[[0,"al(true)"],[1,";"],[0,"\r\n      "]],"start1":1807,"start2":1807,"length1":16,"length2":17}]],"length":5874,"saved":false}
{"ts":1356882275671,"patch":[[{"diffs":[[0,"ar matter = "],[-1,"_spec.m"],[1,"new M"],[0,"atter"],[1,"()"],[0,",\r\n         "]],"start1":1946,"start2":1946,"length1":36,"length2":36},{"diffs":[[0,"ar matter = "],[-1,"_spec.m"],[1,"new M"],[0,"atter"],[1,"()"],[0,",\r\n         "]],"start1":2487,"start2":2487,"length1":36,"length2":36}]],"length":5874,"saved":false}
{"ts":1356882290486,"patch":[[{"diffs":[[0,"   });\r\n        "],[1,"/*"],[0,"\r\n        descri"]],"start1":2921,"start2":2921,"length1":32,"length2":34},{"diffs":[[0,"\r\n        })"],[1,"*/"],[0,"\r\n    });\r\n}"]],"start1":5851,"start2":5851,"length1":24,"length2":26}]],"length":5878,"saved":false}
{"ts":1356882344041,"patch":[[{"diffs":[[0,"    "],[-1,"matter._bounding."],[1,"collisions.bounding(matter, { "],[0,"radius"],[-1," ="],[1,":"],[0," 10"],[1," })"],[0,";\r\n "]],"start1":2106,"start2":2106,"length1":36,"length2":51},{"diffs":[[0,"    "],[-1,"obj._bounding."],[1,"collisions.bounding(obj, { "],[0,"radius"],[-1," ="],[1,":"],[0," 10"],[1," })"],[0,";\r\n "]],"start1":2244,"start2":2244,"length1":33,"length2":48},{"diffs":[[0,"ect("],[-1,"_spec.matter._centerDistanceCollision("],[1,"collisions.centerDistance.call(matter, "],[0,"obj)"]],"start1":2324,"start2":2324,"length1":46,"length2":47},{"diffs":[[0,"    "],[-1,"matter._bounding."],[1,"collisions.bounding(matter, { "],[0,"radius"],[-1," ="],[1,":"],[0," 50"],[1," })"],[0,";\r\n "]],"start1":2678,"start2":2678,"length1":36,"length2":51},{"diffs":[[0,"    "],[-1,"obj._bounding."],[1,"collisions.bounding(obj, { "],[0,"radius"],[-1," ="],[1,":"],[0," 50"],[1," })"],[0,";\r\n "]],"start1":2816,"start2":2816,"length1":33,"length2":48},{"diffs":[[0,"ect("],[-1,"_spec.matter._centerDistanceCollision("],[1,"collisions.centerDistance.call(matter, "],[0,"obj)"]],"start1":2896,"start2":2896,"length1":46,"length2":47}]],"length":5940,"saved":false}
{"ts":1356882559007,"patch":[[{"diffs":[[0,".centerDistance."],[1,"checkCollision."],[0,"call(matter, obj"]],"start1":1767,"start2":1767,"length1":32,"length2":47},{"diffs":[[0,"toEqual(true);\r\n"],[-1,""],[0,"            });\r"]],"start1":1817,"start2":1817,"length1":32,"length2":32},{"diffs":[[0,".centerDistance."],[1,"checkCollision."],[0,"call(matter, obj"]],"start1":2353,"start2":2353,"length1":32,"length2":47},{"diffs":[[0,"\r\n            \r\n"],[-1,""],[0,"                "]],"start1":2891,"start2":2891,"length1":32,"length2":32},{"diffs":[[0,"istance."],[1,"checkCollision."],[0,"call(mat"]],"start1":2948,"start2":2948,"length1":16,"length2":31}]],"length":5985,"saved":false}
{"ts":1356882611869,"patch":[[{"diffs":[[0,"all(this);\r\n"],[1,"            return this;\r\n"],[0,"        };\r\n"]],"start1":179,"start2":179,"length1":24,"length2":50}]],"length":6011,"saved":false}
{"ts":1356882646741,"patch":[[{"diffs":[[0,"    };\r\n    "],[1,"TestObject.prototype = Matter.prototype;\r\n"],[0,"    \r\n    de"]],"start1":221,"start2":221,"length1":24,"length2":66}]],"length":6053,"saved":false}
{"ts":1356882662199,"patch":[[{"diffs":[[0,"c = this"],[-1,","],[1,";"],[0,"\r\n      "]],"start1":112,"start2":112,"length1":17,"length2":17},{"diffs":[[0," this;\r\n        "],[1,"\r\n    var "],[0,"TestObject = fun"]],"start1":115,"start2":115,"length1":32,"length2":42},{"diffs":[[0,"        "],[-1,"    "],[0,"Matter.c"]],"start1":169,"start2":169,"length1":20,"length2":16},{"diffs":[[0,"        "],[-1,"    "],[0,"return t"]],"start1":197,"start2":197,"length1":20,"length2":16},{"diffs":[[0,"turn this;\r\n"],[-1,"    "],[0,"    };\r\n    "]],"start1":207,"start2":207,"length1":28,"length2":24}]],"length":6051,"saved":false}
{"ts":1356882736629,"patch":[[{"diffs":[[0,"\r\n            \r\n"],[1,"            matter.collide = spyMatter;\r\n            obj.collide = spyObj;\r\n            \r\n"],[0,"            expe"]],"start1":1088,"start2":1088,"length1":32,"length2":122}]],"length":6141,"saved":false}
{"ts":1356883751934,"patch":[[{"diffs":[[0,"     collisions."],[1,"utils."],[0,"bounding(matter,"]],"start1":1688,"start2":1688,"length1":32,"length2":38},{"diffs":[[0,"     collisions."],[1,"utils."],[0,"bounding(obj, { "]],"start1":1833,"start2":1833,"length1":32,"length2":38}]],"length":6153,"saved":false}
{"ts":1356886185898,"patch":[[{"diffs":[[0,"    "],[-1,"/*"],[0,"\r\n"],[1,""],[0,"    "]],"start1":3208,"start2":3208,"length1":12,"length2":10},{"diffs":[[0,"\r\n            })"],[1,";"],[0,"\r\n            \r\n"]],"start1":4496,"start2":4496,"length1":32,"length2":33},{"diffs":[[0,"\r\n            })"],[1,";"],[0,"\r\n            \r\n"]],"start1":5032,"start2":5032,"length1":32,"length2":33},{"diffs":[[0,"\r\n            })"],[1,";"],[0,"\r\n            \r\n"]],"start1":5573,"start2":5573,"length1":32,"length2":33},{"diffs":[[0,"\r\n            })"],[1,";"],[0,"\r\n        })*/\r\n"]],"start1":6111,"start2":6111,"length1":32,"length2":33},{"diffs":[[0,"  })"],[-1,"*/"],[1,";"],[0,"\r\n  "]],"start1":6136,"start2":6136,"length1":10,"length2":9}]],"length":6154,"saved":false}
{"ts":1356886246535,"patch":[[{"diffs":[[0,"     collisions."],[1,"utils."],[0,"bounding(matter,"]],"start1":2288,"start2":2288,"length1":32,"length2":38},{"diffs":[[0,"radius: 10 });\r\n"],[-1,""],[0,"                "]],"start1":2329,"start2":2329,"length1":32,"length2":32},{"diffs":[[0,"     collisions."],[1,"utils."],[0,"bounding(obj, { "]],"start1":2432,"start2":2432,"length1":32,"length2":38},{"diffs":[[0,"     collisions."],[1,"utils."],[0,"bounding(matter,"]],"start1":2887,"start2":2887,"length1":32,"length2":38},{"diffs":[[0,"lisions."],[1,"utils."],[0,"bounding"]],"start1":3039,"start2":3039,"length1":16,"length2":22},{"diffs":[[0,"ar matter = "],[-1,"_spec.m"],[1,"new M"],[0,"atter"],[1,"()"],[0,";\r\n         "]],"start1":3395,"start2":3395,"length1":36,"length2":36}]],"length":6178,"saved":false}
{"ts":1356886304389,"patch":[[{"diffs":[[0,"                "],[-1,"matter"],[1,"collisions.utils"],[0,".boundingBox(10,"]],"start1":3477,"start2":3477,"length1":38,"length2":48},{"diffs":[[0,"ils.boundingBox("],[1,"matter, "],[0,"10, 10, 5, 0);\r\n"]],"start1":3506,"start2":3506,"length1":32,"length2":40},{"diffs":[[0,"r box = "],[-1,"matter.boundingB"],[1,"collisions.utils.bounding(matter).b"],[0,"ox();\r\n "]],"start1":3619,"start2":3619,"length1":32,"length2":51}]],"length":6215,"saved":false}
{"ts":1356886350031,"patch":[[{"diffs":[[0,"ar matter = "],[-1,"_spec.m"],[1,"new M"],[0,"atter;\r\n    "]],"start1":4317,"start2":4317,"length1":31,"length2":29},{"diffs":[[0,"                "],[-1,"matter"],[1,"collisions.utils"],[0,".boundingBox(5, "]],"start1":4397,"start2":4397,"length1":38,"length2":48},{"diffs":[[0,"dingBox("],[1,"matter, "],[0,"5, 20, 5"]],"start1":4434,"start2":4434,"length1":16,"length2":24},{"diffs":[[0," expect("],[-1,"matter._"],[0,"bounding"],[1,"(matter)"],[0,".radius)"]],"start1":4498,"start2":4498,"length1":32,"length2":32}]],"length":6231,"saved":false}
{"ts":1356886355779,"patch":[[{"diffs":[[0," expect("],[1,"collisions.utils."],[0,"bounding"]],"start1":4498,"start2":4498,"length1":16,"length2":33}]],"length":6248,"saved":false}
{"ts":1356886373615,"patch":[[{"diffs":[[0,"ar matter = "],[-1,"_spec.m"],[1,"new M"],[0,"atter"],[1,"()"],[0,",\r\n         "]],"start1":4713,"start2":4713,"length1":36,"length2":36},{"diffs":[[0," matter.y = 0;\r\n"],[1,"                collisions.utils.boundingBox(matter, 5, 20, 5, 0);\r\n"],[0,"                "]],"start1":4845,"start2":4845,"length1":32,"length2":100},{"diffs":[[0,"    obj.x = 0;\r\n"],[-1,""],[0,"                "]],"start1":5010,"start2":5010,"length1":32,"length2":32},{"diffs":[[0,"    obj.y = 0;\r\n"],[1,"                collisions.utils.boundingBox(matter, 5, 20, 5, 0);\r\n"],[0,"                "]],"start1":5038,"start2":5038,"length1":32,"length2":100}]],"length":6384,"saved":false}
{"ts":1356886429732,"patch":[[{"diffs":[[0,"er, "],[-1,"5, 20, 5, 0);\r\n                matter.boundingBox("],[0,""],[1,""],[0,"10, "]],"start1":4910,"start2":4910,"length1":58,"length2":8},{"diffs":[[0,"Box("],[-1,"matter, 5, 20, 5, 0);\r\n                obj.boundingBox("],[1,"obj, "],[0,"5, 5"]],"start1":5045,"start2":5045,"length1":63,"length2":13},{"diffs":[[0,"     expect("],[-1,"_spec.matter._"],[1,"collisions."],[0,"boundingBoxC"]],"start1":5095,"start2":5095,"length1":38,"length2":35},{"diffs":[[0,"ions.boundingBox"],[1,".check"],[0,"Collision(obj))."]],"start1":5113,"start2":5113,"length1":32,"length2":38},{"diffs":[[0,"x.checkCollision"],[-1,"("],[1,".call(matter, "],[0,"obj)).toEqual(tr"]],"start1":5128,"start2":5128,"length1":33,"length2":46}]],"length":6300,"saved":false}
{"ts":1356886504344,"patch":[[{"diffs":[[0,"                "],[-1,"matter"],[1,"collisions.utils"],[0,".boundingBox(10,"]],"start1":5453,"start2":5453,"length1":38,"length2":48},{"diffs":[[0,"ils.boundingBox("],[1,"matter, "],[0,"10, 10, 5, 0);\r\n"]],"start1":5482,"start2":5482,"length1":32,"length2":40},{"diffs":[[0,"                "],[-1,"obj"],[1,"collisions.utils"],[0,".boundingBox(5, "]],"start1":5596,"start2":5596,"length1":35,"length2":48},{"diffs":[[0,"dingBox("],[1,"obj, "],[0,"5, 5, 2."]],"start1":5633,"start2":5633,"length1":16,"length2":21},{"diffs":[[0,"     expect("],[-1,"_spec.matter._"],[1,"collisions."],[0,"boundingBoxC"]],"start1":5687,"start2":5687,"length1":38,"length2":35},{"diffs":[[0,"ions.boundingBox"],[1,".check"],[0,"Collision(obj))."]],"start1":5705,"start2":5705,"length1":32,"length2":38},{"diffs":[[0,"x.checkCollision"],[-1,"("],[1,".call(matter, "],[0,"obj)).toEqual(fa"]],"start1":5720,"start2":5720,"length1":33,"length2":46},{"diffs":[[0,"        "],[-1,"matter"],[1,"collisions.utils"],[0,".boundin"]],"start1":6052,"start2":6052,"length1":22,"length2":32},{"diffs":[[0,"ils.boundingBox("],[1,"matter, "],[0,"10, 10, 5, 0);\r\n"]],"start1":6073,"start2":6073,"length1":32,"length2":40},{"diffs":[[0,"        "],[-1,"obj"],[1,"collisions.utils"],[0,".boundin"]],"start1":6195,"start2":6195,"length1":19,"length2":32},{"diffs":[[0,"dingBox("],[1,"obj, "],[0,"10, 10, "]],"start1":6224,"start2":6224,"length1":16,"length2":21},{"diffs":[[0,"ect("],[-1,"_spec.matter._"],[1,"collisions."],[0,"boun"]],"start1":6286,"start2":6286,"length1":22,"length2":19},{"diffs":[[0,"ndingBox"],[1,".check"],[0,"Collisio"]],"start1":6304,"start2":6304,"length1":16,"length2":22},{"diffs":[[0,"x.checkCollision"],[-1,"("],[1,".call(matter, "],[0,"obj)).toEqual(tr"]],"start1":6311,"start2":6311,"length1":33,"length2":46}]],"length":6404,"saved":false}
{"ts":1356886791899,"patch":[[{"diffs":[[0,"ter).box"],[-1,"()"],[0,";\r\n     "]],"start1":3656,"start2":3656,"length1":18,"length2":16}]],"length":6402,"saved":false}
{"ts":1356886819328,"patch":[[{"diffs":[[0,"             // "],[-1,"S"],[1,"G"],[0,"et bounding box\r"]],"start1":3443,"start2":3443,"length1":33,"length2":33},{"diffs":[[0,"\n               "],[1," var box ="],[0," collisions.util"]],"start1":3476,"start2":3476,"length1":32,"length2":42},{"diffs":[[0,"  \r\n"],[-1,"                // Get bounding box\r\n                var box = collisions.utils.bounding(matter).box;\r\n                \r\n"],[0,"    "]],"start1":3570,"start2":3570,"length1":129,"length2":8}]],"length":6291,"saved":false}
{"ts":1356886904842,"patch":[[{"diffs":[[0,"ar matter = "],[-1,"_spec.m"],[1,"new M"],[0,"atter"],[1,"()"],[0,",\r\n         "]],"start1":5190,"start2":5190,"length1":36,"length2":36},{"diffs":[[0,"r = "],[-1,"_spec.m"],[1,"new M"],[0,"atte"]],"start1":5791,"start2":5791,"length1":15,"length2":13}]],"length":6289,"saved":false}
{"ts":1356886909328,"patch":[[{"diffs":[[0,"w Matter"],[1,"()"],[0,",\r\n     "]],"start1":5797,"start2":5797,"length1":16,"length2":18}]],"length":6291,"saved":false}
