{"ts":1356825882727,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1356826132467,"patch":[[{"diffs":[[1,"define(\n[],\nfunction () {\n    var collisions = {};\n    \n    collisions.centerDistance = function (matter, radius) {\n        \n    }\n    \n    return collisions;\n});\n"]],"start1":0,"start2":0,"length1":0,"length2":163}]],"length":163,"saved":false}
{"ts":1356826288724,"patch":[[{"diffs":[[0,"efine(\n["],[1,"'freebody', 'underscore'"],[0,"],\nfunct"]],"start1":1,"start2":1,"length1":16,"length2":40},{"diffs":[[0,"nction ("],[1,"freebody, _"],[0,") {\n    "]],"start1":38,"start2":38,"length1":16,"length2":27},{"diffs":[[0,"on ("],[-1,"m"],[1,"M"],[0,"atte"]],"start1":129,"start2":129,"length1":9,"length2":9},{"diffs":[[0,") {\n        "],[1,"Matter.prototype._bounding.radius = radius;\n        \n        var centerDistance = freebody.utils.distance(this, obj),\n            collisionDistance = this._bounding.radius + obj._bounding.radius;\n        \n        return centerDistance <= collisionDistance;\n    };\n    \n    var bounding = function (Matter, options) {\n        var prop = Matter.prototype._bounding;\n        \n        if (_.isUndefined(options)) {\n            return prop;\n        } else {\n            prop = options;\n        }"],[0,"\n    }\n    \n"]],"start1":147,"start2":147,"length1":24,"length2":514}]],"length":688,"saved":false}
{"ts":1356826373109,"patch":[[{"diffs":[[0,"    "],[-1,"Matter.prototype._bounding."],[1,"// Set bounding\n        bounding(Matter, { "],[0,"radius"],[-1," ="],[1,":"],[0," radius"],[1," })"],[0,";\n  "]],"start1":155,"start2":155,"length1":50,"length2":68}]],"length":706,"saved":false}
{"ts":1356826448289,"patch":[[{"diffs":[[0,"us });\n        \n"],[1,"        // Set collision check\n        collision(Matter, function (obj) {\n            \n        })\n        \n"],[0,"        var cent"]],"start1":214,"start2":214,"length1":32,"length2":139},{"diffs":[[0,"\n    }\n    \n"],[1,"    var collision = function (Matter, callback) {\n        var prop = Matter.prototype.collision;\n        \n        if (_.isUndefined(callback)) {\n            return prop;\n        } else {\n            prop = callback;\n        }\n    }\n    \n"],[0,"    return c"]],"start1":774,"start2":774,"length1":24,"length2":261}]],"length":1050,"saved":false}
{"ts":1356826492888,"patch":[[{"diffs":[[0,"    };\n    \n"],[1,"    /**\n     * Get/set bounding property on Matter prototype\n     */\n"],[0,"    var boun"]],"start1":541,"start2":541,"length1":24,"length2":93},{"diffs":[[0,"\n    }\n    \n"],[1,"    /**\n     * Get/set collision function on Matter prototype\n     */\n"],[0,"    var coll"]],"start1":843,"start2":843,"length1":24,"length2":94}]],"length":1189,"saved":false}
{"ts":1356826568133,"patch":[[{"diffs":[[0,"       \n        "],[-1,"if ("],[1,"return "],[0,"_.isUndefined(op"]],"start1":718,"start2":718,"length1":36,"length2":39},{"diffs":[[0,"ons)"],[-1,") {\n            return prop;\n        } else {\n           "],[1," ? prop :"],[0," pro"]],"start1":759,"start2":759,"length1":65,"length2":17},{"diffs":[[0,"ptions;\n"],[-1,"        }\n"],[0,"    }\n  "]],"start1":781,"start2":781,"length1":26,"length2":16},{"diffs":[[0,"    "],[-1,"if ("],[1,"return "],[0,"_.is"]],"start1":980,"start2":980,"length1":12,"length2":15},{"diffs":[[0,"ack)"],[-1,") {\n            return prop;\n        } else {\n           "],[1," ? prop :"],[0," pro"]],"start1":1010,"start2":1010,"length1":65,"length2":17},{"diffs":[[0,"ck;\n"],[-1,"        }\n"],[0,"    "]],"start1":1037,"start2":1037,"length1":18,"length2":8}]],"length":1079,"saved":false}
{"ts":1356826598978,"patch":[[{"diffs":[[0,"    "],[-1,"\n        })\n        \n        "],[0,"var "]],"start1":312,"start2":312,"length1":37,"length2":8},{"diffs":[[0,", obj),\n"],[1,"    "],[0,"        "]],"start1":365,"start2":365,"length1":16,"length2":20},{"diffs":[[0,"radius;\n        "],[1,"  "],[-1,"\n"],[1,"  \n    "],[0,"        return c"]],"start1":447,"start2":447,"length1":33,"length2":41},{"diffs":[[0,"stance;\n"],[1,"        })\n        \n        \n"],[0,"    };\n "]],"start1":516,"start2":516,"length1":16,"length2":45}]],"length":1091,"saved":false}
{"ts":1356826668193,"patch":[[{"diffs":[[0,"ons = {}"],[1,",\n        boundingProp = '_bounding'"],[0,";\n    \n "]],"start1":76,"start2":76,"length1":16,"length2":52}]],"length":1127,"saved":false}
{"ts":1356826684368,"patch":[[{"diffs":[[0,"e = this"],[-1,"._"],[1,"["],[0,"bounding"],[1,"Prop]"],[0,".radius "]],"start1":441,"start2":441,"length1":26,"length2":30}]],"length":1131,"saved":false}
{"ts":1356826689175,"patch":[[{"diffs":[[0,"us + obj"],[-1,"._"],[1,"["],[0,"bounding"],[1,"Prop]"],[0,".radius;"]],"start1":468,"start2":468,"length1":26,"length2":30}]],"length":1135,"saved":false}
{"ts":1356826700538,"patch":[[{"diffs":[[0,"type"],[-1,"._"],[1,"["],[0,"bounding"],[1,"Prop]"],[0,";\n  "]],"start1":757,"start2":757,"length1":18,"length2":22}]],"length":1139,"saved":false}
{"ts":1356826715086,"patch":[[{"diffs":[[0,"      })"],[-1,"\n        \n        "],[1,";"],[0,"\n    };\n"]],"start1":570,"start2":570,"length1":34,"length2":17}]],"length":1122,"saved":false}
{"ts":1356826790454,"patch":[[{"diffs":[[0,"freebody"],[1,"/utils"],[0,"', 'unde"]],"start1":10,"start2":10,"length1":16,"length2":22},{"diffs":[[0,"nction ("],[-1,"freebody"],[1,"utils"],[0,", _) {\n "]],"start1":44,"start2":44,"length1":24,"length2":21}]],"length":1125,"saved":false}
{"ts":1356826823315,"patch":[[{"diffs":[[0,"Matter, "],[-1,"r"],[1,"boundingR"],[0,"adius) {"]],"start1":172,"start2":172,"length1":17,"length2":25},{"diffs":[[0,"radius: "],[-1,"r"],[1,"boundingR"],[0,"adius })"]],"start1":249,"start2":249,"length1":17,"length2":25},{"diffs":[[0,"e = "],[-1,"freebody."],[0,"util"]],"start1":388,"start2":388,"length1":17,"length2":8}]],"length":1132,"saved":false}
{"ts":1356826912012,"patch":[[{"diffs":[[0,"ding';\n    \n"],[1,"    /**\n     * Use the center distance approach with a bounding circle\n     * \n     * @param {Matter} Matter constructor to add prototype properties to\n     * @param {Number} boundingRadius from center of object\n     */\n"],[0,"    collisio"]],"start1":118,"start2":118,"length1":24,"length2":244}]],"length":1352,"saved":false}
{"ts":1356826976213,"patch":[[{"diffs":[[0," object\n"],[1,"     * @return {function} collision check\n"],[0,"     */\n"],[-1,""],[0,"    coll"]],"start1":334,"start2":334,"length1":24,"length2":66},{"diffs":[[0,"    "],[-1,"collision(Matter,"],[1,"return"],[0," fun"]],"start1":582,"start2":582,"length1":25,"length2":14},{"diffs":[[0,"       }"],[-1,")"],[0,";\n    };"]],"start1":830,"start2":830,"length1":17,"length2":16},{"diffs":[[0,"Prop];\n        \n"],[1,""],[0,"        return _"]],"start1":1013,"start2":1013,"length1":32,"length2":32},{"diffs":[[0,"   \n"],[-1,"    /**\n     * Get/set collision function on Matter prototype\n     */\n    var collision = function (Matter, callback) {\n        var prop = Matter.prototype.collision;\n        \n        return _.isUndefined(callback) ? prop : prop = callback;\n    }\n    \n"],[0,"    "]],"start1":1099,"start2":1099,"length1":260,"length2":8}]],"length":1130,"saved":false}
{"ts":1356827035441,"patch":[[{"diffs":[[0,"    var "],[-1,"b"],[1,"getB"],[0,"ounding "]],"start1":921,"start2":921,"length1":17,"length2":20},{"diffs":[[0,"on ("],[-1,"M"],[1,"m"],[0,"atter"],[-1,", options"],[0,") {\n"]],"start1":949,"start2":949,"length1":23,"length2":14},{"diffs":[[0,"    "],[-1,"var prop = Matter.prototype"],[1,"return matter"],[0,"[bou"]],"start1":967,"start2":967,"length1":35,"length2":21},{"diffs":[[0,"    "],[-1,"    "],[1,"};"],[0,"\n    "],[-1,"    return _.isUndefined(options) ? prop : p"],[1,"var setBounding = function (Matter, options) {\n        Matter.prototype[boundingP"],[0,"rop"],[1,"]"],[0," = o"]],"start1":1000,"start2":1000,"length1":64,"length2":100},{"diffs":[[0,"s;\n    }"],[1,";"],[0,"\n    \n  "]],"start1":1105,"start2":1105,"length1":16,"length2":17}]],"length":1147,"saved":false}
{"ts":1356827062023,"patch":[[{"diffs":[[0,"ing\n        "],[-1,"b"],[1,"setB"],[0,"ounding(Matt"]],"start1":480,"start2":480,"length1":25,"length2":28},{"diffs":[[0,"e = "],[-1,"this[b"],[1,"getB"],[0,"ounding"],[-1,"Prop]"],[1,"(this)"],[0,".rad"]],"start1":705,"start2":705,"length1":26,"length2":25},{"diffs":[[0,"s + "],[-1,"obj[b"],[1,"getB"],[0,"ounding"],[-1,"Prop]"],[1,"(obj)"],[0,".rad"]],"start1":732,"start2":732,"length1":25,"length2":24}]],"length":1148,"saved":false}
{"ts":1356827136983,"patch":[[{"diffs":[[0,"= {}"],[-1,",\n        boundingProp = '_bounding'"],[0,";\n  "]],"start1":83,"start2":83,"length1":44,"length2":8},{"diffs":[[0,"    var "],[1,"boundingProp = '_bounding',\n        "],[0,"getBound"]],"start1":886,"start2":886,"length1":16,"length2":52},{"diffs":[[0,") {\n        "],[1,"  "],[1,"  "],[0,"return matte"]],"start1":960,"start2":960,"length1":24,"length2":28},{"diffs":[[0,"    "],[-1,"};"],[1,"    },"],[0,"\n    "],[-1,"var"],[1,"   "],[0," set"]],"start1":1005,"start2":1005,"length1":18,"length2":22},{"diffs":[[0,"        "],[1," "],[1,"   "],[0,"Matter.p"]],"start1":1067,"start2":1067,"length1":16,"length2":20},{"diffs":[[0,"ptions;\n"],[1,"    "],[0,"    };\n "]],"start1":1113,"start2":1113,"length1":16,"length2":20}]],"length":1164,"saved":false}
{"ts":1356827150392,"patch":[[{"diffs":[[0,"g',\n    "],[-1,"   "],[1,"var"],[0," getBoun"]],"start1":918,"start2":918,"length1":19,"length2":19},{"diffs":[[0,") {\n        "],[-1,"  "],[-1,"  "],[0,"return matte"]],"start1":960,"start2":960,"length1":28,"length2":24},{"diffs":[[0,"    "],[-1,"    },"],[1,"};"],[0,"\n    "],[-1,"   "],[1,"var"],[0," set"]],"start1":1001,"start2":1001,"length1":22,"length2":18},{"diffs":[[0,"        "],[-1," "],[-1,"   "],[0,"Matter.p"]],"start1":1059,"start2":1059,"length1":20,"length2":16},{"diffs":[[0,"ptions;\n"],[-1,"    "],[0,"    };\n "]],"start1":1101,"start2":1101,"length1":20,"length2":16}]],"length":1148,"saved":false}
{"ts":1356827162881,"patch":[[{"diffs":[[0,"ounding'"],[-1,","],[1,";"],[0,"\n    var"]],"start1":912,"start2":912,"length1":17,"length2":17}]],"length":1148,"saved":false}
{"ts":1356827920586,"patch":[[{"diffs":[[0," };\n    };\n    \n"],[1,"    \n    \n"],[0,"    /**\n     * G"]],"start1":801,"start2":801,"length1":32,"length2":42}]],"length":1158,"saved":false}
{"ts":1356828313462,"patch":[[{"diffs":[[0,"    "],[-1,"// Set bounding\n"],[1,"return {\n            setBounding: function (radius) {\n        "],[0,"    "]],"start1":428,"start2":428,"length1":24,"length2":70},{"diffs":[[0,"radius: "],[-1,"boundingR"],[1,"r"],[0,"adius })"]],"start1":524,"start2":524,"length1":25,"length2":17},{"diffs":[[0,"ius });\n        "],[1,"    "],[1,"},"],[0,"\n        // Set "]],"start1":535,"start2":535,"length1":32,"length2":38},{"diffs":[[0,"    "],[-1,"// Set collision check\n        return"],[1,"    checkCollision:"],[0," fun"]],"start1":562,"start2":562,"length1":45,"length2":27},{"diffs":[[0,"ion (obj) {\n"],[1,"    "],[0,"            "]],"start1":591,"start2":591,"length1":24,"length2":28},{"diffs":[[0,", obj),\n"],[1,"    "],[0,"        "]],"start1":659,"start2":659,"length1":16,"length2":20},{"diffs":[[0,"            "],[-1,"\n"],[1,"    \n    "],[0,"            "]],"start1":759,"start2":759,"length1":25,"length2":33},{"diffs":[[0,"ce;\n        "],[1," "],[1,"   }   \n        "],[0,"}"],[-1,";"],[0,"\n    };\n    "]],"start1":832,"start2":832,"length1":26,"length2":42}]],"length":1216,"saved":false}
{"ts":1356828341196,"patch":[[{"diffs":[[0," to\n"],[-1,"     * @param {Number} boundingRadius from center of object\n"],[0,"    "]],"start1":242,"start2":242,"length1":68,"length2":8},{"diffs":[[0,"tter"],[-1,", boundingRadius"],[0,") {\n"]],"start1":340,"start2":340,"length1":24,"length2":8}]],"length":1140,"saved":false}
{"ts":1356880459658,"patch":[[{"diffs":[[0,"e = "],[-1,"function (Matter) {\n        return {\n    "],[1,"{\n"],[0,"    "]],"start1":324,"start2":324,"length1":49,"length2":10},{"diffs":[[0,"            "],[-1,"    "],[0,"setBounding("]],"start1":371,"start2":371,"length1":28,"length2":24},{"diffs":[[0,"ounding("],[-1,"Matter"],[1,"this"],[0,", { radi"]],"start1":387,"start2":387,"length1":22,"length2":20},{"diffs":[[0,"        "],[-1,"    "],[0,"},\n     "]],"start1":422,"start2":422,"length1":20,"length2":16},{"diffs":[[0,"        "],[-1," "],[-1,"   "],[0,"checkCol"]],"start1":433,"start2":433,"length1":20,"length2":16},{"diffs":[[0,"ion (obj) {\n"],[-1,"    "],[0,"            "]],"start1":462,"start2":462,"length1":28,"length2":24},{"diffs":[[0,", obj),\n"],[-1,"    "],[0,"        "]],"start1":526,"start2":526,"length1":20,"length2":16},{"diffs":[[0,"        "],[-1,"    \n    "],[1,"\n"],[0,"        "]],"start1":626,"start2":626,"length1":25,"length2":17},{"diffs":[[0,"    "],[1,"}"],[0,"   "],[-1," }   \n        }"],[0,"\n   "]],"start1":695,"start2":695,"length1":26,"length2":12}]],"length":1057,"saved":false}
{"ts":1356880729555,"patch":[[{"diffs":[[0,"            "],[-1,"setB"],[1,"b"],[0,"ounding(this"]],"start1":371,"start2":371,"length1":28,"length2":25},{"diffs":[[0,"tance = "],[-1,"getB"],[1,"b"],[0,"ounding("]],"start1":559,"start2":559,"length1":20,"length2":17},{"diffs":[[0,"adius + "],[-1,"getB"],[1,"b"],[0,"ounding("]],"start1":583,"start2":583,"length1":20,"length2":17},{"diffs":[[0,"ype\n     */\n"],[-1,""],[0,"    var boun"]],"start1":774,"start2":774,"length1":24,"length2":24},{"diffs":[[0,"nding';\n"],[1,"    var bounding = function (matter, options) {\n        return _.isUndefined(options) \n            ? matter[boundingProp]\n            : matter[boundingProp] = options;\n    }\n    \n"],[0,"    var "]],"start1":814,"start2":814,"length1":16,"length2":195}]],"length":1227,"saved":false}
{"ts":1356880745011,"patch":[[{"diffs":[[0,"   \n"],[-1,"    var getBounding = function (matter) {\n        return matter[boundingProp];\n    };\n    var setBounding = function (Matter, options) {\n        Matter.prototype[boundingProp] = options;\n    };\n    \n"],[0,"    "]],"start1":997,"start2":997,"length1":207,"length2":8}]],"length":1028,"saved":false}
{"contributors":[],"silentsave":false,"ts":1356886876090,"patch":[[{"diffs":[[0,"body"],[-1,"/utils"],[0,"', '"]],"start1":14,"start2":14,"length1":14,"length2":8},{"diffs":[[0,"nction ("],[-1,"utils"],[1,"freebody"],[0,", _) {\n "]],"start1":38,"start2":38,"length1":21,"length2":24},{"diffs":[[0,"= {}"],[-1,";\n    \n    /**\n     * Use the center distance approach with a bounding circle\n     * \n     * @param {Matter} Matter constructor"],[1,",\n        utils = freebody.utils;\n    \n    /**\n     * Center Distance\n     * ===============\n     * \n     * Use the center distance approach with a bounding circle\n     */\n    collisions.centerDistance = {\n        \n        /**\n         * Set bounding around object"],[0," to "],[1,"r"],[0,"ad"],[-1,"d prototype properties to\n     * @return {function} collision check"],[1,"ius from center\n         * \n         * @param {Number} radius"],[0,"\n     "],[-1,"*/\n"],[0,"    "],[-1,"collisions.centerDistance = {"],[1,"*/"],[0,"\n   "]],"start1":80,"start2":80,"length1":250,"length2":352},{"diffs":[[0,"     },\n"],[1,"        \n"],[0,"        "]],"start1":521,"start2":521,"length1":16,"length2":25},{"diffs":[[0,"    "],[-1,"\n    /**\n     * Get/set bounding property on Matter prototype\n     */\n    var boundingProp = '_bounding'"],[1,"/**\n     * Bounding Box\n     * ============\n     * \n     * Use the bounding box approach\n     */\n    collisions.boundingBox = {\n        \n        /**\n         * Set bounding around object to bounding box\n         * \n         * @param {Number} width of bounding box\n         *     (defined as midway and perpendicular to offset)\n         * @param {Number} height of bounding box (parallel to offset)\n         * @param {Number} offsetLength distance from center of matter to side of bounding box\n         * @param {Number} theta (degrees) of offset relative to matter angle\n         */\n        setBounding: function (width, height, offsetLength, theta) {\n            boundingBox(this, width, height, offsetLength, theta);\n        },\n        \n        checkCollision: function (obj) {\n            var matter = this;\n            \n            // Step 1: Check center distance\n            // -----------------------------\n            if (!collisions.centerDistance.checkCollision.call(matter, obj)) {\n                return false;\n            }\n            \n            // Step 2: Check bounding box\n            // --------------------------\n            // Check whether any point of object's bounding box is within\n            // matter's bounding box\n            return !!_.find(boundingBox(obj), function (point) {\n                return pointIsInsideMatter(point, matter)\n            });\n        }\n    }\n    \n    \n    // Utils\n    // =====\n    collisions.utils = {};\n    \n    \n    /**\n     * Get/set bounding box for matter\n     * \n     * @param {Matter} matter to get/set bounding box on\n     * @param {Number} width of bounding box\n     *     (defined as midway and perpendicular to offset)\n     * @param {Number} height of bounding box (parallel to offset)\n     * @param {Number} offsetLength distance from center of matter to side of bounding box\n     * @param {Number} theta (degrees) of offset relative to matter angle\n     * @return {Array} points of bounding box\n     */\n    var boundingBox = collisions.utils.boundingBox = function (matter, width, height, offsetLength, theta) {\n        // If width is defined, assume setter\n        if (!_.isUndefined(width)) {\n            // Store bounding box info\n            bounding(matter, {\n                box: {\n                    width: width,\n                    height: height,\n                    offsetLength: offsetLength,\n                    theta: theta\n                }\n            });\n            \n            // Store maximum distance to point as bounding radius\n            bounding(matter, { radius: boundingRadiusFromBox(matter) });\n        } \n        \n        // For getter or setter, return points for bounding box\n        return boundingBoxPoints(matter)\n    };\n    \n    \n    /**\n     * Get bounding box points array for given matter\n     * \n     * @param {Matter} matter with bounding box to get points for\n     * @return {Array} points\n     */\n    var boundingBoxPoints = collisions.utils.boundingBoxPoints = function (matter) {\n        var box = bounding(matter).box,\n            angle = box.theta + matter.angle,\n            points = [],\n            middlePoint;\n        \n        middlePoint = utils.relativePoint(matter, angle, box.offsetLength);\n        points[0] = utils.relativePoint(middlePoint, angle - 90, box.width / 2);\n        points[3] = utils.relativePoint(middlePoint, angle + 90, box.width / 2)"],[0,";\n    "],[1," "],[-1,"var bounding = function (matter, options) {\n        return _.isUndefined(options) \n            ? matter[boundingProp]\n            : matter[boundingProp] ="],[1,"   \n        points[1] = utils.relativePoint(points[0], angle - 180, box.height);\n        points[2] = utils.relativePoint(points[3], angle - 180, box.height);\n        \n        return points;\n    };\n    \n    \n    /**\n     * Find bounding radius from matter with bounding box\n     * \n     * @param {Matter} matter with bounding box to find bounding radius\n     * @return {Number} radius\n     */\n    var boundingRadiusFromBox = collisions.utils.boundingRadiusFromBox = function (matter) {\n        // Get points of bounding box\n        var points = boundingBoxPoints(matter);\n        \n        var maxDistance = 0;\n        for (var i = 0; i < points.length; i += 1) {\n            // Find distance from center of matter to point\n            var distance = utils.distance(points[i], matter);\n            \n            // Check against maximum distance\n            if (distance > maxDistance) {\n                maxDistance = distance;\n            }\n        }\n        \n        return maxDistance;\n    };\n    \n    \n    /**\n     * Check if given point is within given matter\n     * \n     * @param {Point} point x- and y-coordinates for point\n     * @param {Matter} matter with bounding box to check point against\n     */\n    var pointIsInsideMatter = collisions.utils.pointIsInsideMatter = function (point, matter) {\n        // Approach:\n        // ---------\n        //\n        // 1. Adjust point so that it is rotated into coordinate system where\n        //    the matter's center is 0, 0 and bounding box's angle is 0 deg\n        // 2. Find simple left, right, top, bottom of bounding box since it's\n        //    relative orientation is now 0 deg\n        //\n        \n        // Get bounding box for matter\n        var box = bounding(matter).box;\n        \n        // Find distance from center of matter to point\n        var distance = utils.distance(point, matter);\n        \n        // Find angle from matter to point\n        var angle = utils.angle(matter, point);\n        \n        // Rotate angle to account for bounding box angle and angle of matter\n        angle -= box.theta + matter.angle;\n        \n        // Find point that is relative to matter as 0,0 (rotated and distance)\n        // (undefined sets initial point as 0, 0)\n        var relativePoint = utils.relativePoint(undefined, angle, distance);\n        \n        // Find bounding box parameters\n        var left = box.offsetLength - box.height,\n            right = box.offsetLength,\n            top = box.width/2,\n            bottom = -box.width/2;\n        \n        // Finally, check if point is inside box parameters\n        return relativePoint.x >= left \n            && relativePoint.x <= right \n            && relativePoint.y >= bottom \n            && relativePoint.y <= top;\n    };\n    \n    \n    /**\n     * Get/set bounding property on Matter prototype\n     * \n     * @param {Matter} matter to get/set bounding on\n     * @param {Object} [options] bounding options to set\n     * @return {Object} bounding\n     */\n    var boundingProp = '_bounding';\n    var bounding = collisions.utils.bounding = function (matter, options) {\n        var boundingVal = matter[boundingProp];\n        \n        if (!_.isUndefined(options)) {\n            // Setter\n            _.extend(boundingVal,"],[0," options"],[1,")"],[0,";\n    "],[1,"  "],[-1,"}"],[1,"  } else if (_.isUndefined(boundingVal)) {\n            // Getter + prevent undefined values\n            boundingVal = {};\n        }\n        \n        return boundingVal;\n    };"],[0,"\n   "]],"start1":820,"start2":820,"length1":287,"length2":6820}]],"length":7669,"saved":false}
{"contributors":[],"silentsave":false,"ts":1356929275133,"patch":[[{"diffs":[[0," \n        return"],[1," matter[boundingProp] ="],[0," boundingVal;\n  "]],"start1":7600,"start2":7600,"length1":32,"length2":55}]],"length":7692,"saved":false}
{"ts":1356929358486,"patch":[[{"diffs":[[0,"      }\n        "],[1,"console.log('Bounding: ', options);"],[0,"\n        return "]],"start1":7585,"start2":7585,"length1":32,"length2":67}]],"length":7727,"saved":false}
{"ts":1356929415934,"patch":[[{"diffs":[[0,"ding: ', options"],[1,", matter[boundingProp]"],[0,");\n        retur"]],"start1":7618,"start2":7618,"length1":32,"length2":54}]],"length":7749,"saved":false}
{"ts":1356929499182,"patch":[[{"diffs":[[0,"        "],[1,"//"],[0,"console."]],"start1":7593,"start2":7593,"length1":16,"length2":18}]],"length":7751,"saved":false}
{"ts":1356929703046,"patch":[[{"diffs":[[0,") {\n        "],[1,"if (!_.isUndefined(options)) {\n            // Setter\n            _.extend(matter[boundingProp], options);\n        }\n        \n        return matter[boundingProp];\n        \n        /*"],[0,"var bounding"]],"start1":7289,"start2":7289,"length1":24,"length2":205},{"diffs":[[0,"dingVal;"],[1,"*/"],[0,"\n    };\n"]],"start1":7884,"start2":7884,"length1":16,"length2":18}]],"length":7934,"saved":false}
{"ts":1356929793567,"patch":[[{"diffs":[[0,"rop], options);\n"],[1,"        } else if (_.isUndefined(matter[boundingProp])) {\n            matter[boundingProp] = {};\n"],[0,"        }\n      "]],"start1":7391,"start2":7391,"length1":32,"length2":129}]],"length":8031,"saved":false}
{"ts":1356929835041,"patch":[[{"diffs":[[0,"tter\n           "],[1," matter[boundingProp] ="],[0," _.extend(matter"]],"start1":7349,"start2":7349,"length1":32,"length2":55}]],"length":8054,"saved":false}
{"ts":1356929917806,"patch":[[{"diffs":[[0,"p] ="],[-1," _.extend(matter[boundingProp],"],[0," options"],[-1,")"],[0,";\n  "]],"start1":7384,"start2":7384,"length1":48,"length2":16}]],"length":8022,"saved":false}
{"ts":1356930063599,"patch":[[{"diffs":[[0,"p];\n"],[-1,"        \n        /*var boundingVal = matter[boundingProp];\n        \n        if (!_.isUndefined(options)) {\n            // Setter\n            _.extend(boundingVal, options);\n        } else if (_.isUndefined(boundingVal)) {\n            // Getter + prevent undefined values\n            boundingVal = {};\n        }\n        //console.log('Bounding: ', options, matter[boundingProp]);\n        return matter[boundingProp] = boundingVal;*/\n"],[0,"    "]],"start1":7547,"start2":7547,"length1":440,"length2":8}]],"length":7590,"saved":false}
{"ts":1356930084280,"patch":[[{"diffs":[[0,"gProp] ="],[1," _.extend(matter[boundingProp] || {},"],[0," options"],[1,")"],[0,";\n      "]],"start1":7380,"start2":7380,"length1":24,"length2":62}]],"length":7628,"saved":false}
{"contributors":[],"silentsave":false,"ts":1357244418780,"patch":[[{"diffs":[[0,"op;\n    };\n    \n"],[1,"    var forceExertedOnCircle = function (ship, planet) {\n      \n        utils.angle(ship, planet);\n        \n        \n    };\n    \n    \n    \n"],[0,"    \n    /**\n   "]],"start1":6940,"start2":6940,"length1":32,"length2":171}]],"length":7767,"saved":false}
{"ts":1357244710850,"patch":[[{"diffs":[[0,"    };\n    \n"],[1,"    /**\n     * Find amount of force exerted on each object.\n     * \n     * \n     */ \n    \n"],[0,"    var forc"]],"start1":6944,"start2":6944,"length1":24,"length2":114},{"diffs":[[0,"lanet);\n        "],[1,"utils.hypotenuse(ship.v.x, ship.v.y);\n        utils.angle(null, ship.v)"],[0,"\n        \n    };"]],"start1":7137,"start2":7137,"length1":32,"length2":103}]],"length":7928,"saved":false}
{"ts":1357244869478,"patch":[[{"diffs":[[0,"{\n      "],[1,"  "],[0,"\n       "],[1," var impactAngle ="],[0," utils.a"]],"start1":7101,"start2":7101,"length1":24,"length2":44},{"diffs":[[0,"et);\n       "],[1," var forceTotal ="],[0," utils.hypot"]],"start1":7160,"start2":7160,"length1":24,"length2":41},{"diffs":[[0,".y);\n       "],[1," var forceAngle ="],[0," utils.angle"]],"start1":7223,"start2":7223,"length1":24,"length2":41},{"diffs":[[0," ship.v)"],[1," - impactAngle;\n        var forceExerted = forceTotal * Math.sin(forceAngle); "],[0,"\n       "]],"start1":7270,"start2":7270,"length1":16,"length2":94}]],"length":8060,"saved":false}
{"contributors":[],"silentsave":false,"ts":1357245580679,"patch":[[{"diffs":[[0,"p, planet);\n"],[1,"        console.log(impactAngle);\n"],[0,"        var "]],"start1":7153,"start2":7153,"length1":24,"length2":58},{"diffs":[[0,"p.v.y);\n"],[1,"        console.log(forceTotal);\n"],[0,"        "]],"start1":7254,"start2":7254,"length1":16,"length2":49},{"diffs":[[0,"mpactAngle;\n"],[1,"        console.log(forceAngle);\n"],[0,"        var "]],"start1":7349,"start2":7349,"length1":24,"length2":57},{"diffs":[[0,"ngle); \n"],[-1,""],[0,"        "],[1,"console.log(forceExerted);"],[0,"\n    };\n"]],"start1":7449,"start2":7449,"length1":24,"length2":50}]],"length":8186,"saved":false}
{"ts":1357247236287,"patch":[[{"diffs":[[0,"        "],[-1,"return "],[1,"if ("],[0,"centerDi"]],"start1":738,"start2":738,"length1":23,"length2":20},{"diffs":[[0,"sionDistance"],[1,") {\n                if (typeof this == ball) {\n                    forceExertedOnCircle(this, obj);\n                }\n                return true;\n            }"],[0,";\n        } "]],"start1":773,"start2":773,"length1":24,"length2":184}]],"length":8343,"saved":false}
{"ts":1357247378301,"patch":[[{"diffs":[[0,"            "],[1,"//"],[0,"if (typeof t"]],"start1":793,"start2":793,"length1":24,"length2":26},{"diffs":[[0,"            "],[1,"//"],[0,"    forceExe"]],"start1":838,"start2":838,"length1":24,"length2":26},{"diffs":[[0,"                "],[-1,"}"],[1,"//}\n                forceExertedOnCircle(obj, this);"],[0,"\n               "]],"start1":889,"start2":889,"length1":33,"length2":84}]],"length":8398,"saved":false}
{"ts":1357247512777,"patch":[[{"diffs":[[0,"console.log("],[1,"ship.v, "],[0,"forceTotal);"]],"start1":7482,"start2":7482,"length1":24,"length2":32}]],"length":8406,"saved":false}
{"ts":1357247567784,"patch":[[{"diffs":[[0,"nction ("],[-1,"ship, "],[0,"planet"],[1,", ship"],[0,") {\n    "]],"start1":7291,"start2":7291,"length1":28,"length2":28}]],"length":8406,"saved":false}
{"ts":1357247810626,"patch":[[{"diffs":[[0,"gle("],[-1,"ship, "],[0,"planet"],[1,", ship"],[0,");\n "]],"start1":7358,"start2":7358,"length1":20,"length2":20}]],"length":8406,"saved":false}
{"ts":1357248195976,"patch":[[{"diffs":[[0,"g(ship.v"],[1,"._magnitude"],[0,", forceT"]],"start1":7492,"start2":7492,"length1":16,"length2":27},{"diffs":[[0,"e = "],[-1,"utils.angle(null, ship.v) - impactAngle;"],[0,"\n   "]],"start1":7547,"start2":7547,"length1":48,"length2":8}]],"length":8377,"saved":false}
{"ts":1357248332729,"patch":[[{"diffs":[[0,"l = "],[-1,"utils.hypotenuse(ship.v.x, ship.v.y)"],[1,"ship.v._magnitude"],[0,";\n  "]],"start1":7432,"start2":7432,"length1":44,"length2":25},{"diffs":[[0,"g(ship.v"],[-1,"._magnitude"],[0,", forceT"]],"start1":7473,"start2":7473,"length1":27,"length2":16},{"diffs":[[0,"Angle = "],[1,"ship.v._angle;"],[0,"\n       "]],"start1":7513,"start2":7513,"length1":16,"length2":30}]],"length":8361,"saved":false}
{"ts":1357248427392,"patch":[[{"diffs":[[0,"console.log("],[1,"'Force exerted: ' + "],[0,"forceExerted"]],"start1":7640,"start2":7640,"length1":24,"length2":44}]],"length":8381,"saved":false}
{"ts":1357248749281,"patch":[[{"diffs":[[0," * Math."],[-1,"sin"],[1,"cos"],[0,"(forceAn"]],"start1":7606,"start2":7606,"length1":19,"length2":19}]],"length":8381,"saved":false}
{"ts":1357248758170,"patch":[[{"diffs":[[0,"Total * "],[1,"Math.abs("],[0,"Math.cos"]],"start1":7601,"start2":7601,"length1":16,"length2":25},{"diffs":[[0,"ceAngle)"],[1,")"],[0,"; \n     "]],"start1":7630,"start2":7630,"length1":16,"length2":17}]],"length":8391,"saved":false}
{"ts":1357249096787,"patch":[[{"diffs":[[0,"erted);\n"],[1,"        ship.v._angle = impactAngle - (impactAngle - ship.v._angle)\n"],[0,"    };\n "]],"start1":7689,"start2":7689,"length1":16,"length2":84}]],"length":8459,"saved":false}
{"ts":1357249269379,"patch":[[{"diffs":[[0,"._angle)"],[1,";"],[0,"\n    };\n"]],"start1":7756,"start2":7756,"length1":16,"length2":17}]],"length":8460,"saved":false}
{"ts":1357249416197,"patch":[[{"diffs":[[0,"angle = "],[-1,"impactAngle"],[1,"180"],[0," - (impa"]],"start1":7713,"start2":7713,"length1":27,"length2":19}]],"length":8452,"saved":false}
{"ts":1357250359286,"patch":[[{"diffs":[[0,"pactAngle = "],[1,"-"],[0,"utils.angle("]],"start1":7338,"start2":7338,"length1":24,"length2":25},{"diffs":[[0,"Angle = "],[1,"-"],[0,"ship.v._"]],"start1":7514,"start2":7514,"length1":16,"length2":17}]],"length":8454,"saved":false}
{"ts":1357250550616,"patch":[[{"diffs":[[0,"e = "],[-1,"180 -"],[1,"impactAngle + 90 +"],[0," (im"]],"start1":7719,"start2":7719,"length1":13,"length2":26}]],"length":8467,"saved":false}
{"ts":1357250647880,"patch":[[{"diffs":[[0,"Angle - "],[-1,"ship.v._a"],[1,"forceA"],[0,"ngle);\n "]],"start1":7749,"start2":7749,"length1":25,"length2":22}]],"length":8464,"saved":false}
{"contributors":[],"silentsave":false,"ts":1357254326929,"patch":[[{"diffs":[[0,"le +"],[-1," 90 +"],[0," (im"]],"start1":7732,"start2":7732,"length1":13,"length2":8}]],"length":8459,"saved":false}
{"ts":1357254363588,"patch":[[{"diffs":[[0,"angle = "],[1,"-("],[0,"impactAn"]],"start1":7715,"start2":7715,"length1":16,"length2":18},{"diffs":[[0," forceAngle)"],[1,")"],[0,";\n    };\n   "]],"start1":7753,"start2":7753,"length1":24,"length2":25}]],"length":8462,"saved":false}
{"ts":1357254385223,"patch":[[{"diffs":[[0,"tAngle +"],[1," 90 +"],[0," (impact"]],"start1":7730,"start2":7730,"length1":16,"length2":21}]],"length":8467,"saved":false}
{"ts":1357254432188,"patch":[[{"diffs":[[0,"angle = "],[1,"90//"],[0,"-(impact"]],"start1":7715,"start2":7715,"length1":16,"length2":20},{"diffs":[[0,"ngle));\n"],[1,"        console.log(ship.v._angle)\n"],[0,"    };\n "]],"start1":7769,"start2":7769,"length1":16,"length2":51}]],"length":8506,"saved":false}
{"ts":1357254456096,"patch":[[{"diffs":[[0,"e = "],[-1,"90//"],[0,"-(im"]],"start1":7719,"start2":7719,"length1":12,"length2":8}]],"length":8502,"saved":false}
{"ts":1357257638158,"patch":[[{"diffs":[[0,"e = "],[-1,"-(impactAngle + 90 + (impactAngle - forceAngle))"],[0,";\n  "]],"start1":7719,"start2":7719,"length1":56,"length2":8}]],"length":8454,"saved":false}
{"contributors":[],"silentsave":false,"ts":1357258220348,"patch":[[{"diffs":[[0,"        "],[1,"//"],[0,"ship.v._"]],"start1":7699,"start2":7699,"length1":16,"length2":18}]],"length":8456,"saved":false}
{"ts":1357258539959,"patch":[[{"diffs":[[0,"        "],[-1,"//"],[0,"ship.v._"]],"start1":7699,"start2":7699,"length1":18,"length2":16},{"diffs":[[0,"angle = "],[1,"(180 - (ship.v._angle - (90 - impactAngle))) + (90 - impactAngle)"],[0,";\n      "]],"start1":7715,"start2":7715,"length1":16,"length2":81}]],"length":8519,"saved":false}
{"ts":1357259623301,"patch":[[{"diffs":[[0,"angle = "],[1,"-"],[0,"(180 - ("]],"start1":7715,"start2":7715,"length1":16,"length2":17}]],"length":8520,"saved":false}
{"ts":1357259848624,"patch":[[{"diffs":[[0," = -"],[-1,"(180 - "],[0,"(shi"]],"start1":7720,"start2":7720,"length1":15,"length2":8},{"diffs":[[0,"tAngle))"],[-1,")"],[0," + (90 -"]],"start1":7752,"start2":7752,"length1":17,"length2":16}]],"length":8512,"saved":false}
{"ts":1357260162859,"patch":[[{"diffs":[[0,"- impactAngle);\n"],[1,"        if (ship.v._angle > 360) {ship.v._angle -= 360;}\n"],[0,"        console."]],"start1":7767,"start2":7767,"length1":32,"length2":89}]],"length":8569,"saved":false}
{"ts":1357260795902,"patch":[[{"diffs":[[0,"ath."],[-1,"cos"],[1,"sin"],[0,"(for"]],"start1":7621,"start2":7621,"length1":11,"length2":11}]],"length":8569,"saved":false}
{"ts":1357261025426,"patch":[[{"diffs":[[0,"v._angle"],[1," + ' | ' + Math.abs(ship.v._angle - forceAngle)"],[0,")\n    };"]],"start1":7865,"start2":7865,"length1":16,"length2":63}]],"length":8616,"saved":false}
{"ts":1357261693468,"patch":[[{"diffs":[[0,"._angle "],[-1,"-"],[1,"+"],[0," forceAn"]],"start1":7899,"start2":7899,"length1":17,"length2":17}]],"length":8616,"saved":false}
{"ts":1357262917061,"patch":[[{"diffs":[[0,"bs(Math."],[-1,"si"],[1,"ta"],[0,"n(forceA"]],"start1":7617,"start2":7617,"length1":18,"length2":18}]],"length":8616,"saved":false}
{"ts":1357263711433,"patch":[[{"diffs":[[0,"bs(Math."],[-1,"tan"],[1,"cos"],[0,"(forceAn"]],"start1":7617,"start2":7617,"length1":19,"length2":19},{"diffs":[[0,"rceAngle"],[1," - impactAngle"],[0,")); \n   "]],"start1":7631,"start2":7631,"length1":16,"length2":30}]],"length":8630,"saved":false}
{"ts":1357263801783,"patch":[[{"diffs":[[0,"nitude;\n        "],[1,"//"],[0,"console.log(ship"]],"start1":7448,"start2":7448,"length1":32,"length2":34},{"diffs":[[0,"eExerted"],[1," + ' | ' + forceAngle - impactAngle"],[0,");\n     "]],"start1":7704,"start2":7704,"length1":16,"length2":51}]],"length":8667,"saved":false}
{"ts":1357263856374,"patch":[[{"diffs":[[0,"d + ' | ' + "],[1,"Math.abs(Math.cos("],[0,"forceAngle -"]],"start1":7711,"start2":7711,"length1":24,"length2":42},{"diffs":[[0,"e - impactAngle)"],[1,")"],[0,";\n        ship.v"]],"start1":7750,"start2":7750,"length1":32,"length2":33}]],"length":8686,"saved":false}
{"ts":1357263874365,"patch":[[{"diffs":[[0,"tAngle))"],[1,")"],[0,";\n      "]],"start1":7759,"start2":7759,"length1":16,"length2":17}]],"length":8687,"saved":false}
{"ts":1357264001389,"patch":[[{"diffs":[[0,"xerted + ' |"],[1," Magnitude ' + ship.v._magnitude + ' | Multiplier:"],[0," ' + Math.ab"]],"start1":7706,"start2":7706,"length1":24,"length2":74}]],"length":8737,"saved":false}
{"contributors":["rchall@args.us","tim.hall.engr@gmail.com"],"silentsave":false,"ts":1357271089806,"patch":[[{"diffs":[[0,"ship) {\n        "],[1,"// Determine the angle from the center of the planet to the center of the ship\n        // (Why do you think the neg is here?)"],[0,"\n        var imp"]],"start1":7307,"start2":7307,"length1":32,"length2":157},{"diffs":[[0,"    "],[-1,"console.log(impactAngle);"],[1,"\n        // Get current velocity"],[0,"\n   "]],"start1":7507,"start2":7507,"length1":33,"length2":40},{"diffs":[[0,"eTotal = ship.v."],[-1,"_"],[0,"magnitude;\n     "]],"start1":7560,"start2":7560,"length1":33,"length2":32},{"diffs":[[0,"agnitude"],[1,"()"],[0,";\n      "]],"start1":7577,"start2":7577,"length1":16,"length2":18},{"diffs":[[0,"    "],[-1,"//console.log(ship.v, forceTotal);\n        var forceAngle = -ship.v._angle;\n        console.log(forceAngle);\n        var forceExerted = forceTotal * Math.abs(Math.cos(forceAngle - impactAngle)); \n        console.log('Force exerted: ' + forceExerted + ' | Magnitude ' + ship.v._magnitude + ' | Multiplier: ' + Math.abs(Math.cos(forceAngle - impactAngle)));"],[1,"var forceAngle = -ship.v.angle();\n        \n        // Since the planet velocity isn't affected the ship velocity is constant\n        // (Won't be case for ship-to-ship)\n        // ship.v.magnitude(constant...);\n        \n        var forceExerted = forceTotal * Math.abs(Math.cos(forceAngle - impactAngle)); \n        \n        // Set angle of ship based on impact angle\n        // (This is interesting, the two 90s seem strange and probably won't work for ship-to-ship)"],[0,"\n   "]],"start1":7593,"start2":7593,"length1":363,"length2":474},{"diffs":[[0,"(ship.v."],[-1,"_"],[0,"angle"],[1,"()"],[0," - (90 -"]],"start1":8089,"start2":8089,"length1":22,"length2":23},{"diffs":[[0,"pactAngle);\n"],[1,"        \n        // Adjust angle if necessary to keep between 0 and 360\n"],[0,"        if ("]],"start1":8137,"start2":8137,"length1":24,"length2":96},{"diffs":[[0,"{ship.v."],[-1,"_"],[0,"angle"],[1,"()"],[0," -= 360;"]],"start1":8254,"start2":8254,"length1":22,"length2":23},{"diffs":[[0,"= 360;}\n"],[1,"        \n"],[0,"        "]],"start1":8271,"start2":8271,"length1":16,"length2":25},{"diffs":[[0,"ole.log("],[-1,"ship.v._angle"],[1,"impactAngle);\n        console.log(forceAngle);\n        console.log('Force exerted: ' + forceExerted + ' | Magnitude ' + ship.v.magnitude() + ' | Multiplier: ' + Math.abs(Math.cos(forceAngle - impactAngle)));\n        console.log(ship.v.angle()"],[0," + ' | '"]],"start1":8300,"start2":8300,"length1":29,"length2":258},{"diffs":[[0,"(ship.v."],[-1,"_"],[0,"angle"],[1,"()"],[0," + force"]],"start1":8569,"start2":8569,"length1":22,"length2":23}]],"length":9294,"saved":false}
{"ts":1357271137609,"patch":[[{"diffs":[[0,"here"],[-1,"?"],[0,")\n  "]],"start1":7442,"start2":7442,"length1":9,"length2":8}]],"length":9293,"saved":false}
{"contributors":["tim.hall.engr@gmail.com"],"silentsave":false,"ts":1357271195844,"patch":[[{"diffs":[[0,"p.v."],[-1,"_"],[0,"angle"],[-1," = "],[1,"("],[0,"-(sh"]],"start1":8074,"start2":8074,"length1":17,"length2":14},{"diffs":[[0,"0 - impactAngle)"],[1,")"],[0,";\n        \n     "]],"start1":8127,"start2":8127,"length1":32,"length2":33},{"diffs":[[0,"p.v."],[-1,"_"],[0,"angle"],[1,"()"],[0," > 3"]],"start1":8233,"start2":8233,"length1":14,"length2":15},{"diffs":[[0,"> 360) {"],[1," "],[0,"ship.v.a"]],"start1":8245,"start2":8245,"length1":16,"length2":17},{"diffs":[[0,"gle("],[-1,")"],[1,"ship.v.angle"],[0," -"],[-1,"="],[0," 360"],[-1,";"],[1,"); "],[0,"}\n  "]],"start1":8263,"start2":8263,"length1":17,"length2":29}]],"length":9305,"saved":false}
{"ts":1357271310855,"patch":[[{"diffs":[[0,".v.angle"],[1,"()"],[0," - 360);"]],"start1":8271,"start2":8271,"length1":16,"length2":18}]],"length":9307,"saved":false}
{"contributors":[],"silentsave":false,"ts":1357319558011,"patch":[[{"diffs":[[0,"    */ \n"],[1,"    //I believe the velocity equation is v1' = (m2v2)/m1\n"],[0,"    \n   "]],"start1":7245,"start2":7245,"length1":16,"length2":73}]],"length":9364,"saved":false}
{"contributors":[],"silentsave":false,"ts":1357319663632,"patch":[[{"diffs":[[0,"v2)/m1\n    \n"],[1,"    \n"],[0,"    var forc"]],"start1":7303,"start2":7303,"length1":24,"length2":29},{"diffs":[[0,"ngle)); "],[1,"//I don't think this is correct, but it's close"],[0,"\n       "]],"start1":7956,"start2":7956,"length1":16,"length2":63}]],"length":9416,"saved":false}
{"ts":1357320682260,"patch":[[{"diffs":[[0,"- 360); "],[1,"\n        \n        ship.v.magnitude((planet.mass * planet.v.magnitude()) / ship.mass); "],[0,"}\n      "]],"start1":8391,"start2":8391,"length1":16,"length2":102}]],"length":9502,"saved":false}
{"ts":1357320801679,"patch":[[{"diffs":[[0,"360); \n        \n"],[1,"        if (planet.mass * planet.v.magnitude()) {\n"],[0,"        ship.v.m"]],"start1":8393,"start2":8393,"length1":32,"length2":82},{"diffs":[[0,".mass); "],[1,"\n        }\n        "],[0,"}\n      "]],"start1":8527,"start2":8527,"length1":16,"length2":35}]],"length":9571,"saved":false}
{"ts":1357320966745,"patch":[[{"diffs":[[0,".mass); "],[1,"        //Just trying stuff out"],[0,"\n       "]],"start1":8527,"start2":8527,"length1":16,"length2":47},{"diffs":[[0,"f out\n        }\n"],[1,"        \n"],[0,"        }\n      "]],"start1":8561,"start2":8561,"length1":32,"length2":41}]],"length":9611,"saved":false}
{"contributors":[],"silentsave":false,"ts":1357664328039,"patch":[[{"diffs":[[0,"2v2)/m1\n"],[1,"    //Actually no. Close, but too elastic or whatnot\n"],[0,"    \n   "]],"start1":7302,"start2":7302,"length1":16,"length2":69}]],"length":9664,"saved":false}
{"ts":1357665142420,"patch":[[{"diffs":[[0," <= top;"],[1,"."],[0,"\n    };\n"]],"start1":7147,"start2":7147,"length1":16,"length2":17},{"diffs":[[0,"* Math.abs(Math."],[-1,"cos"],[1,"tan"],[0,"(forceAngle - im"]],"start1":7970,"start2":7970,"length1":35,"length2":35}]],"length":9665,"saved":false}
{"ts":1357665172187,"patch":[[{"diffs":[[0," <= top;"],[-1,"."],[0,"\n    };\n"]],"start1":7147,"start2":7147,"length1":17,"length2":16},{"diffs":[[0,"r whatno"],[-1,"t"],[0,"\n    \n  "]],"start1":7353,"start2":7353,"length1":17,"length2":16},{"diffs":[[0,"bs(Math."],[-1,"tan"],[1,"cos"],[0,"(forceAn"]],"start1":7976,"start2":7976,"length1":19,"length2":19}]],"length":9663,"saved":false}
{"ts":1357665181008,"patch":[[{"diffs":[[0,"* Math.abs(Math."],[-1,"cos"],[1,"tan"],[0,"(forceAngle - im"]],"start1":7968,"start2":7968,"length1":35,"length2":35}]],"length":9663,"saved":false}
{"contributors":[],"silentsave":false,"ts":1357673806687,"patch":[[{"diffs":[[0,".angle()"],[1,");//"],[0," - (90 -"]],"start1":8253,"start2":8253,"length1":16,"length2":20}]],"length":9667,"saved":false}
{"ts":1357673822850,"patch":[[{"diffs":[[0,"angle())"],[1,")"],[0,";// - (9"]],"start1":8254,"start2":8254,"length1":16,"length2":17}]],"length":9668,"saved":false}
{"ts":1357674089084,"patch":[[{"diffs":[[0,"le()"],[-1,"));//"],[0," - ("]],"start1":8257,"start2":8257,"length1":13,"length2":8}]],"length":9663,"saved":false}
{"ts":1357675476953,"patch":[[{"diffs":[[0,"      }\n        "],[1,"/*"],[0,"\n        console"]],"start1":8640,"start2":8640,"length1":32,"length2":34},{"diffs":[[0,"Angle))\n"],[1,"        */\n"],[0,"    };\n "]],"start1":8963,"start2":8963,"length1":16,"length2":27}]],"length":9676,"saved":false}
{"contributors":[],"silentsave":false,"ts":1357748313183,"patch":[[{"diffs":[[0,"ip)\n        "],[1,"//"],[0,"ship.v.angle"]],"start1":8220,"start2":8220,"length1":24,"length2":26},{"diffs":[[0,"actAngle));\n"],[1,"        ship.v.angle(-(ship.v.angle() - (2*(90 - impactAngle))));\n"],[0,"        \n   "]],"start1":8297,"start2":8297,"length1":24,"length2":90}]],"length":9744,"saved":false}
{"contributors":["rchall@args.us","tim.hall.engr@gmail.com"],"silentsave":false,"ts":1357790356798,"patch":[[{"diffs":[[0,"bs(Math."],[-1,"t"],[1,"cos(utils.radi"],[0,"an"],[1,"s"],[0,"(forceAn"]],"start1":7976,"start2":7976,"length1":19,"length2":33},{"diffs":[[0,"tAngle))"],[1,")"],[0,"; //I do"]],"start1":8020,"start2":8020,"length1":16,"length2":17},{"diffs":[[0,"        "],[-1,"/*"],[0,"\n       "]],"start1":8731,"start2":8731,"length1":18,"length2":16},{"diffs":[[0,"       \n        "],[1,"//"],[0,"console.log(impa"]],"start1":8732,"start2":8732,"length1":32,"length2":34},{"diffs":[[0,"Angle);\n        "],[1,"//"],[0,"console.log(forc"]],"start1":8768,"start2":8768,"length1":32,"length2":34},{"diffs":[[0,"Angle);\n        "],[1,"//"],[0,"console.log('For"]],"start1":8803,"start2":8803,"length1":32,"length2":34},{"diffs":[[0,"ath.cos("],[1,"utils.radians("],[0,"forceAng"]],"start1":8937,"start2":8937,"length1":16,"length2":30},{"diffs":[[0,"Angle)))"],[1,")"],[0,";\n      "]],"start1":8978,"start2":8978,"length1":16,"length2":17},{"diffs":[[0,"        "],[1,"//"],[0,"console."]],"start1":8989,"start2":8989,"length1":16,"length2":18},{"diffs":[[0,"e))\n        "],[-1,"*/"],[0,"\n    };\n    "]],"start1":9071,"start2":9071,"length1":26,"length2":24},{"diffs":[[0,"    \n    };\n    "],[1,"\n    var bounce = function (A, B) {\n        var impactAngle = utils.angle(A, B);\n    \n        // Flip angle around impact angle and then flip (-180)\n        var angleANew = impactAngle + (impactAngle - A.v.angle()) - 180;\n        var angleBNew = impactAngle + (impactAngle - B.v.angle()) - 180;\n        \n        A.v.angle(angleANew);\n        B.v.angle(angleBNew);\n    };"],[0,"\n    \n    \n    \n"]],"start1":9079,"start2":9079,"length1":32,"length2":402}]],"length":10148,"saved":false}
{"ts":1357790435122,"patch":[[{"diffs":[[0,"ANew"],[-1,");\n        B.v.angle("],[1," > 360 ? angleANew - 360 : angleANew);\n        B.v.angle(angleBNew > 360 ? angleBNew - 360 : "],[0,"angl"]],"start1":9422,"start2":9422,"length1":29,"length2":101}]],"length":10220,"saved":false}
{"ts":1357790486710,"patch":[[{"diffs":[[0,"            "],[1,"//"],[0,"forceExerted"]],"start1":913,"start2":913,"length1":24,"length2":26},{"diffs":[[0,"obj, this);\n"],[1,"                bounce(obj, this);\n"],[0,"            "]],"start1":948,"start2":948,"length1":24,"length2":59}]],"length":10257,"saved":false}
{"ts":1357790725585,"patch":[[{"diffs":[[0,"- 180;\n        \n"],[1,"        var magANew = (A.v.magnitude() * (A.mass - B.mass) + 2 * B.mass * B.v.magnitude()) / (A.mass + B.mass);\n        var magBNew = (B.v.magnitude() * (B.mass - A.mass) + 2 * A.mass * A.v.magnitude()) / (A.mass + B.mass);\n        \n"],[0,"        A.v.angl"]],"start1":9420,"start2":9420,"length1":32,"length2":265},{"diffs":[[0,"angleANew);\n"],[1,"        A.v.magnitude(magANew);\n        \n"],[0,"        B.v."]],"start1":9723,"start2":9723,"length1":24,"length2":65},{"diffs":[[0,"angleBNew);\n"],[1,"        B.v.magnitude(magBNew);\n"],[0,"    };\n    \n"]],"start1":9830,"start2":9830,"length1":24,"length2":56}]],"length":10563,"saved":false}
{"ts":1357790910604,"patch":[[{"diffs":[[0,"angleANew);\n"],[1,"        if (A.v.magnitude() > 0) {\n    "],[0,"        A.v."]],"start1":9723,"start2":9723,"length1":24,"length2":63},{"diffs":[[0,"e(magANew);\n"],[1,"        }\n"],[0,"        \n   "]],"start1":9794,"start2":9794,"length1":24,"length2":34},{"diffs":[[0,"angleBNew);\n"],[1,"        if (B.v.magnitude() > 0) {\n    "],[0,"        B.v."]],"start1":9879,"start2":9879,"length1":24,"length2":63},{"diffs":[[0,"e(magBNew);\n"],[1,"        }\n"],[0,"    };\n    \n"]],"start1":9950,"start2":9950,"length1":24,"length2":34}]],"length":10661,"saved":false}
{"ts":1357790986115,"patch":[[{"diffs":[[0,"mass);\n        \n"],[1,"        if (A.v.magnitude() > 0) {\n    "],[0,"        A.v.angl"]],"start1":9653,"start2":9653,"length1":32,"length2":71},{"diffs":[[0,"eANew);\n        "],[-1,"if ("],[1,"    "],[0,"A.v.magnitude() "]],"start1":9766,"start2":9766,"length1":36,"length2":36},{"diffs":[[0,"v.magnitude("],[-1,") > 0) {"],[1,"magANew);\n        }"],[0,"\n           "]],"start1":9788,"start2":9788,"length1":32,"length2":43},{"diffs":[[0,"      }\n        "],[1,"\n "],[0,"    "],[-1,"A"],[1,"   if (B"],[0,".v.magnitude(mag"]],"start1":9812,"start2":9812,"length1":37,"length2":46},{"diffs":[[0,"ude("],[-1,"magANew);\n        }\n        \n"],[1,") > 0) {\n    "],[0,"    "]],"start1":9851,"start2":9851,"length1":37,"length2":21},{"diffs":[[0,"w);\n"],[-1,"        if (B.v.magnitude() > 0) {\n"],[0,"    "]],"start1":9930,"start2":9930,"length1":43,"length2":8}]],"length":10669,"saved":false}
{"ts":1357791088525,"patch":[[{"diffs":[[0,"(A, B);\n"],[1,"        console.log('Bounce: ', A, B);\n"],[0,"    \n   "]],"start1":9205,"start2":9205,"length1":16,"length2":55}]],"length":10708,"saved":false}
{"ts":1357791177954,"patch":[[{"diffs":[[0,"        "],[1,"//"],[0,"console."]],"start1":9213,"start2":9213,"length1":16,"length2":18}]],"length":10710,"saved":false}
{"ts":1357791197663,"patch":[[{"diffs":[[0,"            "],[1,"//"],[0,"A.v.magnitud"]],"start1":9815,"start2":9815,"length1":24,"length2":26},{"diffs":[[0,"            "],[1,"//"],[0,"B.v.magnitud"]],"start1":9977,"start2":9977,"length1":24,"length2":26}]],"length":10714,"saved":false}
{"ts":1357791749270,"patch":[[{"diffs":[[0,"nction ("],[-1,"planet, ship"],[1,"A, B"],[0,") {\n    "]],"start1":7442,"start2":7442,"length1":28,"length2":20},{"diffs":[[0,"gle("],[-1,"planet, ship"],[1,"A, B"],[0,");\n "]],"start1":7626,"start2":7626,"length1":20,"length2":12},{"diffs":[[0,"Total = "],[-1,"ship"],[1,"B"],[0,".v.magni"]],"start1":7695,"start2":7695,"length1":20,"length2":17},{"diffs":[[0,"ngle = -"],[-1,"ship"],[1,"B"],[0,".v.angle"]],"start1":7738,"start2":7738,"length1":20,"length2":17},{"diffs":[[0,"    "],[-1,"//ship.v.angle(-(ship.v.angle() - (90 - impactAngle)) + (90 - impactAngle));\n        ship"],[1,"B"],[0,".v.a"]],"start1":8258,"start2":8258,"length1":97,"length2":9},{"diffs":[[0,"angle(-("],[-1,"ship"],[1,"B"],[0,".v.angle"]],"start1":8266,"start2":8266,"length1":20,"length2":17},{"diffs":[[0,"    if ("],[-1,"ship"],[1,"B"],[0,".v.angle"]],"start1":8390,"start2":8390,"length1":20,"length2":17},{"diffs":[[0," 360) { "],[-1,"ship"],[1,"B"],[0,".v.angle"]],"start1":8411,"start2":8411,"length1":20,"length2":17},{"diffs":[[0,"v.angle("],[-1,"ship"],[1,"B"],[0,".v.angle"]],"start1":8421,"start2":8421,"length1":20,"length2":17},{"diffs":[[0,"    if ("],[-1,"planet"],[1,"A"],[0,".mass * "],[-1,"planet"],[1,"A"],[0,".v.magni"]],"start1":8463,"start2":8463,"length1":36,"length2":26},{"diffs":[[0,"        "],[-1,"ship"],[1,"B"],[0,".v.magni"]],"start1":8499,"start2":8499,"length1":20,"length2":17},{"diffs":[[0,"de(("],[-1,"planet"],[1,"A"],[0,".mass * "],[-1,"planet"],[1,"A"],[0,".v.m"]],"start1":8518,"start2":8518,"length1":28,"length2":18},{"diffs":[[0,"de()) / "],[-1,"ship"],[1,"B"],[0,".mass); "]],"start1":8542,"start2":8542,"length1":20,"length2":17},{"diffs":[[0,"e - A.v.angle())"],[1,";//"],[0," - 180;\n        "]],"start1":9223,"start2":9223,"length1":32,"length2":35},{"diffs":[[0,"angle())"],[1,";//"],[0," - 180;\n"]],"start1":9307,"start2":9307,"length1":16,"length2":19},{"diffs":[[0,"        "],[-1,"//"],[0,""],[1,""],[0,"A.v.magn"]],"start1":9677,"start2":9677,"length1":18,"length2":16},{"diffs":[[0,"        "],[-1,"//"],[0,""],[1,""],[0,"B.v.magn"]],"start1":9837,"start2":9837,"length1":18,"length2":16}]],"length":10568,"saved":false}
{"ts":1357791795564,"patch":[[{"diffs":[[0,"e - A.v.angle())"],[-1,";//"],[0," - 180;\n        "]],"start1":9223,"start2":9223,"length1":35,"length2":32},{"diffs":[[0,"e())"],[-1,";//"],[0," - 1"]],"start1":9308,"start2":9308,"length1":11,"length2":8},{"diffs":[[0,"            "],[1,"//"],[0,"A.v.magnitud"]],"start1":9667,"start2":9667,"length1":24,"length2":26},{"diffs":[[0,"w);\n            "],[1,"//"],[0,"B.v.magnitude(ma"]],"start1":9825,"start2":9825,"length1":32,"length2":34}]],"length":10566,"saved":false}
{"contributors":[],"silentsave":false,"ts":1357847342246,"patch":[[{"diffs":[[0,"mass);\n        \n"],[1,"        \n"],[0,"        if (A.v."]],"start1":9546,"start2":9546,"length1":32,"length2":41},{"diffs":[[0,"        "],[-1,"//"],[0,"A.v.magn"]],"start1":9680,"start2":9680,"length1":18,"length2":16},{"diffs":[[0,"        "],[-1,"//"],[0,"B.v.magn"]],"start1":9840,"start2":9840,"length1":18,"length2":16}]],"length":10571,"saved":false}
{"ts":1357847507162,"patch":[[{"diffs":[[0,"gANew = "],[1,"Math.abs("],[0,"(A.v.mag"]],"start1":9343,"start2":9343,"length1":16,"length2":25},{"diffs":[[0,"A.mass + B.mass)"],[1,")"],[0,";\n        var ma"]],"start1":9432,"start2":9432,"length1":32,"length2":33},{"diffs":[[0,"gBNew = "],[1,"Math.abs("],[0,"(B.v.mag"]],"start1":9465,"start2":9465,"length1":16,"length2":25},{"diffs":[[0," B.mass)"],[1,")"],[0,";\n      "]],"start1":9562,"start2":9562,"length1":16,"length2":17}]],"length":10591,"saved":false}
